import { Interfaces } from '@oclif/core';
import { Duration } from '@salesforce/kit';
import { Nullable } from '@salesforce/ts-types';
import { ComponentSet, DeployResult, MetadataApiDeploy } from '@salesforce/source-deploy-retrieve';
import { API, TestLevel, TestResults } from './types';
declare type Options = {
    api: API;
    'target-org': string;
    'test-level': TestLevel;
    'api-version'?: string;
    'dry-run'?: boolean;
    'ignore-errors'?: boolean;
    'ignore-warnings'?: boolean;
    manifest?: string;
    metadata?: string[];
    'source-dir'?: string[];
    tests?: string[];
    wait?: Duration;
    verbose?: boolean;
};
export declare function validateTests(testLevel: TestLevel, tests: Nullable<string[]>): boolean;
export declare function resolveRestDeploy(): API;
export declare function executeDeploy(opts: Partial<Options>): Promise<{
    deploy: MetadataApiDeploy;
    componentSet: ComponentSet;
}>;
export declare const testLevelFlag: (opts?: Partial<Interfaces.OptionFlag<TestLevel | undefined>>) => Interfaces.OptionFlag<TestLevel | undefined>;
export declare function getTestResults(result: DeployResult): TestResults;
export {};
