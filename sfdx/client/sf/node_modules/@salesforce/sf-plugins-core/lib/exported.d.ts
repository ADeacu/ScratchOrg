/// <reference types="node" />
export { toHelpSection } from './util';
export { Deployable, Deployer } from './deployer';
export { Deauthorizer } from './deauthorizer';
export { Progress, Prompter, generateTableChoices } from './ux';
export { SfHook } from './hooks';
export * from './types';
export { SfCommand, SfCommandInterface } from './sfCommand';
export declare const Flags: {
    boolean: typeof import("@oclif/core/lib/parser/flags").boolean;
    directory: (opts?: ({
        exists?: boolean | undefined;
    } & Partial<import("@oclif/core/lib/interfaces").OptionFlag<string>>) | undefined) => import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
    enum: <T = string>(opts: import("@oclif/core/lib/interfaces").EnumFlagOptions<T>) => import("@oclif/core/lib/interfaces").OptionFlag<T>;
    file: (opts?: ({
        exists?: boolean | undefined;
    } & Partial<import("@oclif/core/lib/interfaces").OptionFlag<string>>) | undefined) => import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
    integer: import("@oclif/core/lib/interfaces").Definition<number>;
    string: import("@oclif/core/lib/interfaces").Definition<string>;
    url: import("@oclif/core/lib/interfaces").Definition<import("url").URL>;
    duration: (durationConfig: import("./flags/duration").DurationFlagConfig) => import("@oclif/core/lib/interfaces").OptionFlag<import("@salesforce/kit").Duration | undefined>;
    salesforceId: (inputs?: import("./flags/salesforceId").IdFlagConfig) => import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
    orgApiVersion: import("@oclif/core/lib/interfaces").Definition<string>;
    requiredOrg: import("@oclif/core/lib/interfaces").Definition<import("@salesforce/core").Org>;
    requiredHub: import("@oclif/core/lib/interfaces").Definition<import("@salesforce/core").Org>;
    optionalOrg: import("@oclif/core/lib/interfaces").Definition<import("@salesforce/core").Org | undefined>;
};
//# sourceMappingURL=exported.d.ts.map